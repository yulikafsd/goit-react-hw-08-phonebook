{"version":3,"file":"static/js/171.2da85fbc.chunk.js","mappings":"kPAGaA,EAAQC,EAAAA,GAAAA,MAAH,2GAiBLC,GAVQD,EAAAA,GAAAA,MAAH,qIAUSA,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,gFAMXG,GAAcH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,0HAQXK,EAASL,EAAAA,GAAAA,OAAH,sU,4DCnBbM,EAAgB,CACpBC,GAAI,GACJC,MAAO,GACPC,SAAU,IAmEZ,EAhEkB,WAChB,IAAMC,GAAeC,EAAAA,EAAAA,MACfC,GAAkBD,EAAAA,EAAAA,MAClBE,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IACpBC,GAAgBF,EAAAA,EAAAA,IAAYG,EAAAA,IAC5BC,GAAWC,EAAAA,EAAAA,MAUjB,OACE,iCACE,SAACC,EAAA,EAAD,WACE,yCAEF,UAACC,EAAA,EAAD,CACEC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,UAAU,SACVC,MAAM,QACNC,GAAG,OACHC,GAAG,OARL,WAUE,wCACA,SAAC,KAAD,CACEvB,cAAeA,EACfwB,SA1Ba,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACxBC,EAAO,CACXzB,MAAOuB,EAAOvB,MAAM0B,OACpBzB,SAAUsB,EAAOtB,SAASyB,QAE5BhB,GAASiB,EAAAA,EAAAA,IAAMF,MAAWpB,GAASmB,GACpC,EAqBOI,iBAAkBC,EAAAA,GAHpB,UAKE,UAAC,KAAD,YACE,SAACtC,EAAD,CAAOuC,QAAS5B,EAAhB,oBACA,SAACT,EAAD,CACEsC,KAAK,QACLC,KAAK,QACLC,UAAQ,EACRlC,GAAIG,EACJgC,YAAY,yBAEd,SAACvC,EAAD,CAAaqC,KAAK,QAAQG,UAAU,SACpC,SAAC5C,EAAD,CAAOuC,QAAS1B,EAAhB,uBACA,SAACX,EAAD,CACEsC,KAAK,WACLC,KAAK,WACLC,UAAQ,EACRlC,GAAIK,KAEN,SAACT,EAAD,CAAaqC,KAAK,WAAWG,UAAU,SACvC,SAACtC,EAAD,CAAQkC,KAAK,SAASK,SAAU5B,EAAhC,SACGA,EAAgB,gBAAkB,qBAOhD,C","sources":["pages/login/Login.styled.js","pages/login/Login.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Field, ErrorMessage } from 'formik';\n\nexport const Label = styled.label`\n  display: block;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  line-height: 1;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 236px;\n  line-height: 1;\n\n  &:last-of-type {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const StyledField = styled(Field)`\n  display: block;\n  width: 236px;\n  line-height: 1;\n`;\n\nexport const StyledError = styled(ErrorMessage)`\n  font-size: 10px;\n  font-style: italic;\n  text-align: left;\n  line-height: 1;\n  color: red;\n`;\n\nexport const Button = styled.button`\n  display: block;\n  margin: auto;\n  margin-bottom: 20px;\n  margin-top: 20px;\n  padding: 10px 20px;\n  min-width: 130px;\n  border: none;\n  border-radius: 25px;\n  color: #fff;\n  background-color: #00bcd5;\n  transition: all 250ms ease-in-out;\n\n  &:hover {\n    background-color: #00a6bc;\n  }\n`;\n","import { Formik, Form } from 'formik';\nimport { loginSchema } from 'constants/schema';\nimport { nanoid } from 'nanoid';\nimport {\n  Label,\n  StyledField,\n  StyledError,\n  Button,\n} from 'pages/login/Login.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectError, selectIsAuthorising } from 'redux/auth/selectors';\nimport { Box } from 'styles/Box';\nimport { logIn } from 'redux/auth/operations';\nimport { Helmet } from 'react-helmet';\n\nconst initialValues = {\n  id: '',\n  email: '',\n  password: '',\n};\n\nconst LoginPage = () => {\n  const emailInputId = nanoid();\n  const passwordInputId = nanoid();\n  const error = useSelector(selectError);\n  const isAuthorising = useSelector(selectIsAuthorising);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    const user = {\n      email: values.email.trim(),\n      password: values.password.trim(),\n    };\n    dispatch(logIn(user)) && !error && resetForm();\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Log In</title>\n      </Helmet>\n      <Box\n        pt={3}\n        pb={3}\n        pr={4}\n        pl={4}\n        textAlign=\"center\"\n        width=\"300px\"\n        ml=\"auto\"\n        mr=\"auto\"\n      >\n        <h1>Login Page</h1>\n        <Formik\n          initialValues={initialValues}\n          onSubmit={handleSubmit}\n          validationSchema={loginSchema}\n        >\n          <Form>\n            <Label htmlFor={emailInputId}>Login</Label>\n            <StyledField\n              type=\"email\"\n              name=\"email\"\n              required\n              id={emailInputId}\n              placeholder=\"your.mail@email.com\"\n            />\n            <StyledError name=\"email\" component=\"div\" />\n            <Label htmlFor={passwordInputId}>Password</Label>\n            <StyledField\n              type=\"password\"\n              name=\"password\"\n              required\n              id={passwordInputId}\n            />\n            <StyledError name=\"password\" component=\"div\" />\n            <Button type=\"submit\" disabled={isAuthorising}>\n              {isAuthorising ? 'Logging in...' : 'Log in'}\n            </Button>\n          </Form>\n        </Formik>\n      </Box>\n    </>\n  );\n};\n\nexport default LoginPage;\n"],"names":["Label","styled","StyledField","Field","StyledError","ErrorMessage","Button","initialValues","id","email","password","emailInputId","nanoid","passwordInputId","error","useSelector","selectError","isAuthorising","selectIsAuthorising","dispatch","useDispatch","Helmet","Box","pt","pb","pr","pl","textAlign","width","ml","mr","onSubmit","values","resetForm","user","trim","logIn","validationSchema","loginSchema","htmlFor","type","name","required","placeholder","component","disabled"],"sourceRoot":""}
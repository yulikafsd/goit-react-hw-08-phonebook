{"version":3,"file":"static/js/970.d45933ba.chunk.js","mappings":"qNAEaA,E,QAASC,GAAAA,OAAH,6T,gFC6DnB,MAhDA,WACE,IAAMC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IACpBC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IACxBC,GAASJ,EAAAA,EAAAA,IAAYK,EAAAA,IACrBC,GAAWC,EAAAA,EAAAA,MAajB,OAXAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBACjBC,EAASF,EAAWE,OAI1B,OAFAL,GAASM,EAAAA,EAAAA,IAAcD,IAEhB,WACLF,EAAWI,OACZ,CACF,GAAE,CAACP,KAGF,iCACE,SAAC,KAAD,WACE,8CAEF,UAACQ,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,QAAQ,OAAOC,WAAW,QAA3D,WACE,UAACN,EAAA,EAAD,CAAKO,GAAI,EAAT,WACE,SAAC,KAAD,IACe,UAAdnB,IAAyB,+CACzBH,GAAmB,aAAVA,IACR,kCAAUA,EAAV,4BAEa,UAAdG,IAA0BH,IAAS,SAAC,KAAD,OAErCK,GACC,SAAC,IAAD,KAEA,SAACP,EAAD,CACEyB,KAAK,SACLC,QAAS,WACPjB,GAASkB,EAAAA,EAAAA,KAAU,GACpB,EAJH,UAME,SAAC,MAAD,CAAkBC,KAAK,OAAOC,MAAM,UAAUC,KAAK,mBAM9D,C","sources":["pages/сontacts/Contacts.styled.js","pages/сontacts/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Button = styled.button`\n  background-color: #fff;\n  border: none;\n  padding: 10px 12px;\n  border-radius: 50%;\n  color: #fff;\n  fill: #00bcd5;\n  cursor: pointer;\n  border: 2px solid #00bcd5;\n  transition: all 250ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    background-color: #00bcd5;\n    fill: #fff;\n  }\n`;\n","import { Box } from 'styles/Box';\nimport { IoPersonAddSharp } from 'react-icons/io5';\nimport { Button } from './Contacts.styled';\nimport { ContactForm, ContactList, Filter } from 'components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport {\n  selectError,\n  selectOperation,\n  selectIsOpen,\n} from 'redux/contacts/selectors';\nimport { Helmet } from 'react-helmet-async';\nimport { setIsOpen } from 'redux/contacts/contactsSlice';\n\nfunction ContactsPage() {\n  const error = useSelector(selectError);\n  const operation = useSelector(selectOperation);\n  const isOpen = useSelector(selectIsOpen);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n\n    dispatch(fetchContacts(signal));\n\n    return () => {\n      controller.abort();\n    };\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>My contacts</title>\n      </Helmet>\n      <Box pt={3} pb={3} pr={4} pl={4} display=\"flex\" alignItems=\"start\">\n        <Box mr={5}>\n          <Filter />\n          {operation === 'fetch' && <p>Loading contacts...</p>}\n          {error && error !== 'canceled' && (\n            <p>Oops, {error}. Try reload the page.</p>\n          )}\n          {operation !== 'fetch' && !error && <ContactList />}\n        </Box>\n        {isOpen ? (\n          <ContactForm />\n        ) : (\n          <Button\n            type=\"button\"\n            onClick={() => {\n              dispatch(setIsOpen(true));\n            }}\n          >\n            <IoPersonAddSharp size=\"30px\" color=\"inherit\" fill=\"inherit\" />\n          </Button>\n        )}\n      </Box>\n    </>\n  );\n}\n\nexport default ContactsPage;\n"],"names":["Button","styled","error","useSelector","selectError","operation","selectOperation","isOpen","selectIsOpen","dispatch","useDispatch","useEffect","controller","AbortController","signal","fetchContacts","abort","Box","pt","pb","pr","pl","display","alignItems","mr","type","onClick","setIsOpen","size","color","fill"],"sourceRoot":""}
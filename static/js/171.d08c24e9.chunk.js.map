{"version":3,"file":"static/js/171.d08c24e9.chunk.js","mappings":"kPAGaA,EAAQC,EAAAA,GAAAA,MAAH,2GAiBLC,GAVQD,EAAAA,GAAAA,MAAH,qIAUSA,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,gFAMXG,GAAcH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,0HAQXK,EAASL,EAAAA,GAAAA,OAAH,sU,uCCrBbM,EAAgB,CACpBC,GAAI,GACJC,MAAO,GACPC,SAAU,IAsEZ,EAnEkB,WAChB,IAAMC,GAAeC,EAAAA,EAAAA,MACfC,GAAkBD,EAAAA,EAAAA,MAClBE,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IAoB9B,OACE,UAACC,EAAA,EAAD,CACEC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,UAAU,SACVC,MAAM,QACNC,GAAG,OACHC,GAAG,OARL,WAUE,wCACA,SAAC,KAAD,CACElB,cAAeA,EACfmB,SAhCe,SAACC,EAAD,GAA2B,EAAhBC,SAgB/B,EAiBKC,iBAAkBC,EAAAA,GAHpB,UAKE,UAAC,KAAD,YACE,SAAC9B,EAAD,CAAO+B,QAASpB,EAAhB,oBACA,SAACT,EAAD,CACE8B,KAAK,QACLC,KAAK,QACLC,UAAQ,EACR1B,GAAIG,EACJwB,YAAY,yBAEd,SAAC/B,EAAD,CAAa6B,KAAK,QAAQG,UAAU,SACpC,SAACpC,EAAD,CAAO+B,QAASlB,EAAhB,uBACA,SAACX,EAAD,CACE8B,KAAK,WACLC,KAAK,WACLC,UAAQ,EACR1B,GAAIK,KAEN,SAACT,EAAD,CAAa6B,KAAK,WAAWG,UAAU,SACvC,SAAC9B,EAAD,CAAQ0B,KAAK,SAASK,SAAwB,UAAdvB,EAAhC,SACiB,UAAdA,EAAwB,gBAAkB,kBAMtD,C","sources":["pages/login/Login.styled.js","pages/login/Login.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Field, ErrorMessage } from 'formik';\n\nexport const Label = styled.label`\n  display: block;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  line-height: 1;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 236px;\n  line-height: 1;\n\n  &:last-of-type {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const StyledField = styled(Field)`\n  display: block;\n  width: 236px;\n  line-height: 1;\n`;\n\nexport const StyledError = styled(ErrorMessage)`\n  font-size: 10px;\n  font-style: italic;\n  text-align: left;\n  line-height: 1;\n  color: red;\n`;\n\nexport const Button = styled.button`\n  display: block;\n  margin: auto;\n  margin-bottom: 20px;\n  margin-top: 20px;\n  padding: 10px 20px;\n  min-width: 130px;\n  border: none;\n  border-radius: 25px;\n  color: #fff;\n  background-color: #00bcd5;\n  transition: all 250ms ease-in-out;\n\n  &:hover {\n    background-color: #00a6bc;\n  }\n`;\n","import { Formik, Form } from 'formik';\nimport { loginSchema } from 'constants/schema';\nimport { nanoid } from 'nanoid';\nimport {\n  Label,\n  StyledField,\n  StyledError,\n  Button,\n} from 'pages/login/Login.styled';\nimport { useSelector } from 'react-redux';\nimport { selectOperation } from 'redux/selectors';\nimport { Box } from 'styles/Box';\n\nconst initialValues = {\n  id: '',\n  email: '',\n  password: '',\n};\n\nconst LoginPage = () => {\n  const emailInputId = nanoid();\n  const passwordInputId = nanoid();\n  const operation = useSelector(selectOperation);\n\n  const handleSubmit = (values, { resetForm }) => {\n    //   const isContact = contacts.some(\n    //     contact =>\n    //       contact.name.toLowerCase() === values.name.toLowerCase().trim()\n    //   );\n    //   if (isContact) {\n    //     changeNameMessage(values.name);\n    //     return;\n    //   } else {\n    //     const newContact = {\n    //       name: values.name.trim(),\n    //       number: values.number.trim(),\n    //     };\n    //     dispatch(addContact(newContact)) && !error && resetForm();\n    //   }\n    // };\n  };\n\n  return (\n    <Box\n      pt={3}\n      pb={3}\n      pr={4}\n      pl={4}\n      textAlign=\"center\"\n      width=\"300px\"\n      ml=\"auto\"\n      mr=\"auto\"\n    >\n      <h1>Login Page</h1>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={loginSchema}\n      >\n        <Form>\n          <Label htmlFor={emailInputId}>Login</Label>\n          <StyledField\n            type=\"email\"\n            name=\"email\"\n            required\n            id={emailInputId}\n            placeholder=\"your.mail@email.com\"\n          />\n          <StyledError name=\"email\" component=\"div\" />\n          <Label htmlFor={passwordInputId}>Password</Label>\n          <StyledField\n            type=\"password\"\n            name=\"password\"\n            required\n            id={passwordInputId}\n          />\n          <StyledError name=\"password\" component=\"div\" />\n          <Button type=\"submit\" disabled={operation === 'login'}>\n            {operation === 'login' ? 'Logging in...' : 'Log in'}\n          </Button>\n        </Form>\n      </Formik>\n    </Box>\n  );\n};\n\nexport default LoginPage;\n"],"names":["Label","styled","StyledField","Field","StyledError","ErrorMessage","Button","initialValues","id","email","password","emailInputId","nanoid","passwordInputId","operation","useSelector","selectOperation","Box","pt","pb","pr","pl","textAlign","width","ml","mr","onSubmit","values","resetForm","validationSchema","loginSchema","htmlFor","type","name","required","placeholder","component","disabled"],"sourceRoot":""}
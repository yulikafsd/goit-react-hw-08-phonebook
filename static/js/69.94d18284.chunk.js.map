{"version":3,"file":"static/js/69.94d18284.chunk.js","mappings":"kPAGaA,EAAQC,EAAAA,GAAAA,MAAH,2GAiBLC,GAVQD,EAAAA,GAAAA,MAAH,qIAUSA,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,gFAMXG,GAAcH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,0HAQXK,EAASL,EAAAA,GAAAA,OAAH,sU,4DCnBbM,EAAgB,CACpBC,GAAI,GACJC,KAAM,GACNC,MAAO,GACPC,SAAU,IAgFZ,EA7EqB,WACnB,IAAMC,GAAcC,EAAAA,EAAAA,MACdC,GAAeD,EAAAA,EAAAA,MACfE,GAAkBF,EAAAA,EAAAA,MAElBG,GAAWC,EAAAA,EAAAA,MACXC,GAAgBC,EAAAA,EAAAA,IAAYC,EAAAA,IAC5BC,GAAQF,EAAAA,EAAAA,IAAYG,EAAAA,IAW1B,OACE,iCACE,SAAC,KAAD,WACE,2CAEF,UAACC,EAAA,EAAD,CACEC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,UAAU,SACVC,MAAM,QACNC,GAAG,OACHC,GAAG,OARL,WAUE,2CACA,SAAC,KAAD,CACExB,cAAeA,EACfyB,SA3Ba,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACxBC,EAAU,CACd1B,KAAMwB,EAAOxB,KAAK2B,OAClB1B,MAAOuB,EAAOvB,MAAM0B,OACpBzB,SAAUsB,EAAOtB,UAEnBK,GAASqB,EAAAA,EAAAA,IAASF,MAAcd,GAASa,GAC1C,EAqBOI,iBAAkBC,EAAAA,GAClBC,aAAa,MAJf,UAME,UAAC,KAAD,YACE,SAACxC,EAAD,CAAOyC,QAAS7B,EAAhB,mBACA,SAACV,EAAD,CACEwC,KAAK,OACLjC,KAAK,OACLkC,UAAQ,EACRnC,GAAII,EACJgC,YAAY,eAEd,SAACxC,EAAD,CAAaK,KAAK,OAAOoC,UAAU,SACnC,SAAC7C,EAAD,CAAOyC,QAAS3B,EAAhB,oBACA,SAACZ,EAAD,CACEwC,KAAK,QACLjC,KAAK,QACLkC,UAAQ,EACRnC,GAAIM,EACJ8B,YAAY,yBAEd,SAACxC,EAAD,CAAaK,KAAK,QAAQoC,UAAU,SACpC,SAAC7C,EAAD,CAAOyC,QAAS1B,EAAhB,uBACA,SAACb,EAAD,CACEwC,KAAK,WACLjC,KAAK,WACLkC,UAAQ,EACRnC,GAAIO,KAEN,SAACX,EAAD,CAAaK,KAAK,WAAWoC,UAAU,SACvC,SAACvC,EAAD,CAAQoC,KAAK,SAASI,SAAU5B,EAAhC,SACGA,EAAgB,iBAAmB,uBAOjD,C","sources":["pages/register/Register.styled.js","pages/register/Register.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Field, ErrorMessage } from 'formik';\n\nexport const Label = styled.label`\n  display: block;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  line-height: 1;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 236px;\n  line-height: 1;\n\n  &:last-of-type {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const StyledField = styled(Field)`\n  display: block;\n  width: 236px;\n  line-height: 1;\n`;\n\nexport const StyledError = styled(ErrorMessage)`\n  font-size: 10px;\n  font-style: italic;\n  text-align: left;\n  line-height: 1;\n  color: red;\n`;\n\nexport const Button = styled.button`\n  display: block;\n  margin: auto;\n  margin-bottom: 20px;\n  margin-top: 20px;\n  padding: 10px 20px;\n  min-width: 130px;\n  border: none;\n  border-radius: 25px;\n  color: #fff;\n  background-color: #00bcd5;\n  transition: all 250ms ease-in-out;\n\n  &:hover {\n    background-color: #00a6bc;\n  }\n`;\n","import { Formik, Form } from 'formik';\nimport { registerSchema } from 'constants/schema';\nimport { nanoid } from 'nanoid';\nimport {\n  Label,\n  StyledField,\n  StyledError,\n  Button,\n} from 'pages/register/Register.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectError, selectIsAuthorising } from 'redux/auth/selectors';\nimport { Box } from 'styles/Box';\nimport { register } from 'redux/auth/operations';\nimport { Helmet } from 'react-helmet-async';\n\nconst initialValues = {\n  id: '',\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst RegisterPage = () => {\n  const nameInputId = nanoid();\n  const emailInputId = nanoid();\n  const passwordInputId = nanoid();\n\n  const dispatch = useDispatch();\n  const isAuthorising = useSelector(selectIsAuthorising);\n  const error = useSelector(selectError);\n\n  const handleSubmit = (values, { resetForm }) => {\n    const newUser = {\n      name: values.name.trim(),\n      email: values.email.trim(),\n      password: values.password,\n    };\n    dispatch(register(newUser)) && !error && resetForm();\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Register</title>\n      </Helmet>\n      <Box\n        pt={3}\n        pb={3}\n        pr={4}\n        pl={4}\n        textAlign=\"center\"\n        width=\"300px\"\n        ml=\"auto\"\n        mr=\"auto\"\n      >\n        <h1>Register Page</h1>\n        <Formik\n          initialValues={initialValues}\n          onSubmit={handleSubmit}\n          validationSchema={registerSchema}\n          autoComplete=\"off\"\n        >\n          <Form>\n            <Label htmlFor={nameInputId}>Name</Label>\n            <StyledField\n              type=\"text\"\n              name=\"name\"\n              required\n              id={nameInputId}\n              placeholder=\"Peter Pen\"\n            />\n            <StyledError name=\"name\" component=\"div\" />\n            <Label htmlFor={emailInputId}>Email</Label>\n            <StyledField\n              type=\"email\"\n              name=\"email\"\n              required\n              id={emailInputId}\n              placeholder=\"your.mail@email.com\"\n            />\n            <StyledError name=\"email\" component=\"div\" />\n            <Label htmlFor={passwordInputId}>Password</Label>\n            <StyledField\n              type=\"password\"\n              name=\"password\"\n              required\n              id={passwordInputId}\n            />\n            <StyledError name=\"password\" component=\"div\" />\n            <Button type=\"submit\" disabled={isAuthorising}>\n              {isAuthorising ? 'Registering...' : 'Register'}\n            </Button>\n          </Form>\n        </Formik>\n      </Box>\n    </>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["Label","styled","StyledField","Field","StyledError","ErrorMessage","Button","initialValues","id","name","email","password","nameInputId","nanoid","emailInputId","passwordInputId","dispatch","useDispatch","isAuthorising","useSelector","selectIsAuthorising","error","selectError","Box","pt","pb","pr","pl","textAlign","width","ml","mr","onSubmit","values","resetForm","newUser","trim","register","validationSchema","registerSchema","autoComplete","htmlFor","type","required","placeholder","component","disabled"],"sourceRoot":""}